[{"data":1,"prerenderedAt":113},["Reactive",2],{"search-api":3},[4,11,18,27,34,44,51,58,68,75,86,94,101],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","Documentation",[],"    ViewTube   ViewTube is an alternative YouTube frontend that lets you watch, search and discover YouTube videos without ads or tracking.  ",{"id":12,"path":13,"dir":7,"title":14,"description":15,"keywords":16,"body":17},"content:1.about:0.index.md","/about","Get started","ViewTube is a self-hostable frontend for YouTube. If you do not want to install it yourself, you can use one of the public instances.\nIf you have a server or PC to run it on, check out the installation guide.",[],"  Using ViewTube  ViewTube is a self-hostable frontend for YouTube. If you do not want to install it yourself, you can use one of the   public instances .  \nIf you have a server or PC to run it on, check out the   installation guide .",{"id":19,"path":20,"dir":21,"title":22,"description":7,"keywords":23,"body":26},"content:1.about:1.instances.md","/about/instances","about","Public instances",[24,25],"Official instances","Community instances","  Public instances  Official instances     Instance  URL  Description    ViewTube   viewtube.io  This instance uses the latest stable version.   ViewTube Dev   dev.viewtube.io  This instance uses the latest development version.  Community instances     URL  Version     https://viewtube.wizge.com  0.12.2   You can add your instance to this list by   opening a pull request .",{"id":28,"path":29,"dir":7,"title":30,"description":31,"keywords":32,"body":33},"content:2.installation:0.index.md","/installation","Installation","Currently there are two ways to install ViewTube:",[],"  Installation  Currently there are two ways to install ViewTube:    Using Docker  (Recommended)   Building and running from source",{"id":35,"path":36,"dir":37,"title":38,"description":7,"keywords":39,"body":43},"content:2.installation:1.docker.md","/installation/docker","installation","Docker",[40,41,42],"Overview","Version overview","Setup","  Docker  Overview  ViewTube can be run in a Docker container. You will need to have   Docker  and   Docker Compose  installed.  Version overview  Latest   viewtube:latest  is the latest stable version. It should generally be safe to use. If you don't want to update automatically, you can use the version tag directly.\n    Dev   viewtube:dev  is the development version, which means it may contain bugs. However, it will receive fixes faster if YouTube changes something.\n    Setup  Environment variables   Check the   configuration page  for more information about the environment variables.  For the purpose of this guide, we will use the following environment variables:     VIEWTUBE_DATABASE_HOST  :   viewtube-mongodb\n   VIEWTUBE_REDIS_HOST  :   viewtube-redis\n  Docker-compose file  Create a folder for your ViewTube instance.     mkdir   viewtube\n   cd   viewtube\n  Inside, create a file named   docker-compose.yml  with the following contents:     version  :   '3'\n   \n   services  :\n     viewtube  :\n       restart  :   unless-stopped\n       # Or use mauriceo/viewtube:dev for the development version\n       image  :   mauriceo/viewtube:latest\n       # ViewTube will not start until the database and redis are ready\n       depends_on  :\n         -   viewtube-mongodb\n         -   viewtube-redis\n       # Make sure all services are in the same network\n       networks  :\n         -   viewtube\n       volumes  :\n         # This will map ViewTube's data directory to the local folder ./data/viewtube/\n         -   ./data/viewtube:/data\n       environment  :\n         -   VIEWTUBE_DATABASE_HOST=viewtube-mongodb\n         -   VIEWTUBE_REDIS_HOST=viewtube-redis\n       ports  :\n         -   8066:8066\n   \n     viewtube-mongodb  :\n       restart  :   unless-stopped\n       image  :   mongo:7\n       networks  :\n         -   viewtube\n       volumes  :\n         -   ./data/db:/data/db\n   \n     viewtube-redis  :\n       restart  :   unless-stopped\n       image  :   redis:7\n       networks  :\n         -   viewtube\n       volumes  :\n         -   ./data/redis:/data\n   \n   networks  :\n     viewtube  :\n  Running on systems without AVX support, e.g. Synology NAS  When running on a home NAS system, e.g. Synlogy, QNAP, ASUSTOR, etc., you may encounter the following warning:     viewtube-mongodb      |   WARNING:   MongoDB   5.0  +   requires   a   CPU   with   AVX   support,   and   your   current   system   does   not   appear   to   have   that!\n   viewtube-mongodb      |     see   https://jira.mongodb.org/browse/SERVER-54407\n   viewtube-mongodb      |     see   also   https://www.mongodb.com/community/forums/t/mongodb-5-0-cpu-intel-g4650-compatibility/116610/2\n   viewtube-mongodb      |     see   also   https://github.com/docker-library/mongo/issues/485#issuecomment-891991814\n  If so you may use   mongo:4.4  instead of   mongo:7 :     ...\n     viewtube-mongodb  :\n       restart  :   unless-stopped\n       image  :   mongo:4.4\n   ...\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":45,"path":46,"dir":37,"title":47,"description":7,"keywords":48,"body":50},"content:2.installation:2.manual.md","/installation/manual","Manual installation",[49,30],"Requirements","  Manual installation  Requirements  For a manual installation, the following requirements must be met:    Node.js 18.14.x   pnpm 7.25.x  or higher   Redis 7.x   MongoDB 5.x   Git  Installation  Clone the repository     git   clone   https://github.com/viewtube/viewtube.git\n  Set environment variables  Edit the file   server/.env  to set any necessary   environment variables .  Install dependencies     cd   viewtube\n   \n   pnpm   install\n  Build the project     pnpm   run   build\n  Run the project     pnpm   run   start\n  Visit   http://localhost:8066  to see the running instance.  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":52,"path":53,"dir":37,"title":54,"description":7,"keywords":55,"body":57},"content:2.installation:3.configuration.md","/installation/configuration","Configuration",[56],"Environment variables","  Configuration  Environment variables   ViewTube will check all required environment variables on startup. Check the logs to see if any are missing!  Database configuration     Variable  Default  Description    VIEWTUBE_DATABASE_HOST  localhost  The hostname of the database   VIEWTUBE_DATABASE_PORT   27017  The port of the database   VIEWTUBE_DATABASE_USER   empty  The database username   VIEWTUBE_DATABASE_PASSWORD   empty  The database password  Redis configuration     Variable  Default  Description    VIEWTUBE_REDIS_HOST  localhost  The hostname of the redis instance   VIEWTUBE_REDIS_PORT   6379  The port of the redis instance   VIEWTUBE_REDIS_PASSWORD   empty  The password of the redis instance  Advanced configuration     Variable  Default  Description    VIEWTUBE_CORS_ORIGIN   empty  Specify the domain allowed to make cross-origin requests to ViewTube (see:   CORS )   VIEWTUBE_SECURE  false  Enables some security features (CSP headers, secure cookies). Enable this if you are using an HTTPS certificate   VIEWTUBE_YOUTUBE_COOKIE   empty  Your Youtube cookie (see:   Youtube cookies )   VIEWTUBE_YOUTUBE_IDENTIFIER   empty  Your Youtube identifier   VIEWTUBE_PROXY_URL   empty  The URL of the proxy server (see:   Proxy )",{"id":59,"path":60,"dir":37,"title":61,"description":7,"keywords":62,"body":67},"content:2.installation:4.advanced.md","/installation/advanced","Advanced",[63,64,65,66],"CORS","Rate limiting","Use cookies from a real account","Proxy","  Advanced configuration  CORS  The   VIEWTUBE_CORS_ORIGIN  environment variable specifies the domains that are allowed to access the resources served by ViewTube.\nFor example, if you set VIEWTUBE_CORS_ORIGIN to   http://example.com , only requests from   http://example.com  will be allowed to access the api of your ViewTube instance.  By default, CORS is disabled. In Production, it is recommended to set VIEWTUBE_CORS_ORIGIN to the domain that you are accessing your instance from.\nRead more about CORS here:   https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS  Rate limiting  YouTube rate-limits and blocks IPs sometimes, if they detect too many requests from the same IP. There are a few ways to circumvent this.  Use cookies from a real account  You can provide your own cookies to circumvent this issue.  YouTube cookie   Navigate to YouTube in a web browser  Log in, preferrably with a separate account you don't use often  Open up the dev tools console  Type   document.cookie  Copy the entire response into the   VIEWTUBE_YOUTUBE_COOKIE  environment variable  YouTube identifier   Navigate to a video  Right click and click \"view source\"  Press CTRL+F to search for \"ID_TOKEN\"  Copy this value into the   VIEWTUBE_YOUTUBE_IDENTIFIER  environment variable  Proxy  Another way to circumvent Google's rate-limiting is to use an external proxy.\nViewTube already proxies all requests through the server it's running on, but you can also use an external proxy.\nThis proxy is used for the video page only.  Set the proxy URL using the   VIEWTUBE_PROXY_URL  environment variable.",{"id":69,"path":70,"dir":7,"title":71,"description":72,"keywords":73,"body":74},"content:3.features:0.index.md","/features","Features","This section of the documentation provides an overview of some of the features of ViewTube.",[],"  Features  This section of the documentation provides an overview of some of the features of ViewTube.",{"id":76,"path":77,"dir":78,"title":79,"description":7,"keywords":80,"body":85},"content:3.features:1.import-subscriptions.md","/features/import-subscriptions","features","Import subscriptions",[81,82,83,84],"YouTube","Invidious","NewPipe","Piped","  Import subscriptions  YouTube   Log in to the   Google takeout manager  Click on \"All YouTube data included\"\n   Click on \"Deselect all\", select only \"subscriptions\n   Click on \"Next step\", then click on \"Create export\"  Once you have received the data, download it and extract the .zip-file  Find the file \"subscriptions.csv\" and upload it to ViewTube  Invidious  Coming soon...  NewPipe  Piped",{"id":87,"path":88,"dir":78,"title":89,"description":7,"keywords":90,"body":93},"content:3.features:2.sessions.md","/features/sessions","Sessions",[91,92],"How do sessions work?","Devices management","  Sessions  How do sessions work?  Each time you log in with a new browser or device, a session is created. It is stored in a cookie and is valid for 7 days. This session is extended each time you visit ViewTube. If you do not visit ViewTube for 7 days, the session expires and you are automatically logged out.  Devices management  The sessions explained above are referred to as \"devices\" on your profile page (  https://viewtube.io/profile ). Your active device is highlighted with a border.  \nYou can rename devices and choose a different icon for them.\nYou can remove a device, which must then log in again.  ",{"id":95,"path":96,"dir":7,"title":14,"description":97,"keywords":98,"body":100},"content:4.development:0.index.md","/development","You can develop on basically any system that supports the prerequisites.\nI personally develop on Windows and Linux. If you find that the development setup is not working for you, please submit a pull request. Unfortunately i don't have the time to test on every system. However, this documentation should be a pretty good starting point.",[99],"Prerequisites","  Get started with development  You can develop on basically any system that supports the   prerequisites .\nI personally develop on Windows and Linux. If you find that the development setup is not working for you, please   submit a pull request . Unfortunately i don't have the time to test on every system. However, this documentation should be a pretty good starting point.  Prerequisites  For development, you need the following tools installed.   Nodejs v18.16.x  Pnpm >8.6.x  Of course, the basics like a text editor, git and a terminal are also required.",{"id":102,"path":103,"dir":104,"title":105,"description":7,"keywords":106,"body":112},"content:4.development:1.setting-up.md","/development/setting-up","development","Setting up",[107,108,109,110,111],"Clone the repository","Run the development environment with docker","Run it without docker","Install dependencies","Run the server and client","  Clone the repository  If you want to contribute to ViewTube, I'd recommend you to fork the repository first. Otherwise, you can just clone it.     git   clone   https://github.com/ViewTube/viewtube.git\n  Run the development environment with docker  In order to run the server, you also need MongoDB and Redis. There is a docker-compose file supplied to run these locally. To use it, you need to have docker and docker-compose installed.   Docker >20.x  Docker-compose >2.x  Run the following command at the root of the project to start MongoDB and Redis     pnpm   run   serve:env\n  Run it without docker  If you don't want to use docker, you need to install MongoDB and Redis separately.\nViewTube will automatically connect to the default ports of these services. If yours are different, check the   configuration  page on how to change them.  Install dependencies  Run the following command at the root of the project to install all dependencies.     pnpm   install\n  Run the server and client  In order to run the server and client, you need to run the following commands in two separate terminals:     pnpm   run   serve:server\n     pnpm   run   serve:client\n  And the final step:   Visit   localhost:8066  with a browser.  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",1699556592780]